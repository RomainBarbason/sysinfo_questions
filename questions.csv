Question,Réponse,Matière,,,,
Définis le shell,Le shell est  un programme designé pour permettre à l’utilisateur d’utiliser son ordinateur avec le clavier.,Utilisation du langage bash,,,,
"Que fait l'utilitaire ""cat"" ?",lit et affiche le contenu d'un fichier,Utilisation du langage bash,,,,
"Que fait l'utilitaire ""echo"" ?",affiche une chaine de caractères passée en argument,Utilisation du langage bash,,,,
"Que fait l'utilitaire ""head"" ?",extrait le début d'un fichier,Utilisation du langage bash,,,,
"Que fait l'utilitaire ""tail"" ?",extrait la fin d'un fichier,Utilisation du langage bash,,,,
"Que fait l'utilitaire ""wc"" ?",compte le nombr de caractères et de lignes d'un fichier,Utilisation du langage bash,,,,
"Que fait l'utilitaire ""grep"" ?",extrait d'un fichier les lignes qui contiennent (ou pas) la chaîne passée en argument,Utilisation du langage bash,,,,
"Que fait l'utilitaire ""sort"" ?","trie les lignes d’un fichier texte",Utilisation du langage bash,,,,
"Que fait l'utilitaire ""uniq"" ?","extrait les lignes uniques ou dupliquées d’un fichier (le fichier doit être trié)
",Utilisation du langage bash,,,,
"Que fait l'utilitaire ""more"" ?","affiche page par page un fichier",Utilisation du langage bash,,,,
"Que fait l'utilitaire ""gzip"" ?","compresse un fichier
",Utilisation du langage bash,,,,
"Que fait l'utilitaire ""gunzip"" ?","décompresse un fichier
",Utilisation du langage bash,,,,
"Que fait l'utilitaire ""tar"" ?","regroupe plusieurs fichiers dans une archive",Utilisation du langage bash,,,,
"Que fait l'utilitaire ""sed"" ?","édite les caractères d’un flux de données
",Utilisation du langage bash,,,,
"Que fait l'utilitaire ""awk"" ?",Il inclut un petit langage de programmtion. Il permet d'écrire rapidement de nombreux programmes de manipulation de fichiers de texte,Utilisation du langage bash,,,,
"A quoi sert "">"" dans une commande ?","Rediriger la sortie d'une commande sur l'entrée standard (stdin) d'un processus ou d'un fichier. Un seul "">"" overwrite la destination (si c'est un fichier).",Utilisation du langage bash,,,,
"A quoi sert "">>"" dans une commande ?",Rediriger la sortie d'une commande sur l'entrée standard (stdin) d'un processus ou d'un fichier,Utilisation du langage bash,,,,
"A quoi sert ""<"" dans une commande ?",Cela force une commande a prendre un fichier en entrée.,Utilisation du langage bash,,,,
Définis stdin.,"L'entrée standard qui est un flux d’informations par lequel le processus reçoit les données à traiter. Par défaut, l’entrée standard est associée au clavier",Utilisation du langage bash,,,,
Définis stdout.,"Sortie standard qui est un flux d’informations sur lequel le processus écrit le résultat de son traitement. Par défaut, la sortie standard est associée au terminal.",Utilisation du langage bash,,,,
Définis strerr.,"Sortie d’erreur standard qui est un flux de données sur lequel le processus écrira les messages d’erreur éventuels. Par défaut, la sortie d’erreur standard est associée au même terminal que stdout.",Utilisation du langage bash,,,,
"Quand on redirige une sortie vers /dev/null, que faisons-nous ?"," = Mettre a la poubelle. Il accepte
toutes les données en écriture mais celles-ci ne peuvent jamais être relues",Utilisation du langage bash,,,,
"Quand est-ce que la condition ""-f file"" est-elle vraie ?","Quand ""file"" existe",Utilisation du langage bash,,,,
"Quand est-ce que la condition ""-s file"" est-elle vraie ?","Quand ""file"" n'est pas vide",Utilisation du langage bash,,,,
"Quand est-ce que la condition ""-r file"" est-elle vraie ?","Quand ""file"" peut être lu par l'utilisateur qui lance le script",Utilisation du langage bash,,,,
"Quand est-ce que la condition ""-w file"" est-elle vraie ?","Quand ""file"" peut être écrit pas l'utilisateur qui lance le script",Utilisation du langage bash,,,,
"Quand est-ce que la condition ""-x file"" est-elle vraie ?","Quand ""file"" peut être exécuté par l'utilisateur qui lance le script",Utilisation du langage bash,,,,
Quel est l'opérateur logique qui représente NOT ?,!,Utilisation du langage bash,,,,
Quel est l'opérateur logique qui représente AND ?,-a,Utilisation du langage bash,,,,
Quel est l'opérateur logique qui représente OR ?,-o,Utilisation du langage bash,,,,
"QUESTION SUR ""apostrophes inversés"" A FAIRE",A FAIRE,Utilisation du langage bash,,,,
"Que représente ""*"" ?",N'importe quelle chaine de caractères (y compris la chaine vide),Utilisation du langage bash,,,,
"Que représente ""?"" ?",Représente un caractère unique (pas la chaine vide),Utilisation du langage bash,,,,
Définis DMA.,Direct Access Memory = permet le transfert direct entre le controleur de périphérique et la mémoire principale SANS passer par le système d'exploitation.,Utilisation du langage bash,,,,
Combien de place en bits prend un nibble ?,4 bits,Représentation des données en mémoire,,,,
Combien de place en bits prend un octet/byte ?,8 bits,Représentation des données en mémoire,,,,
Combien de place en bits prend un mot (+-) ?,32 bits,Représentation des données en mémoire,,,,
Combien de place en bits prend un long mot (+-) ?,64 bits,Représentation des données en mémoire,,,,
Qu'est ce qu'un nibble ?,Un caractère en hexadécimal,Représentation des données en mémoire,,,,
Définis langage d'assemblage,Le langage d’assemblage permet d’exprimer de façon symbolique les différentes instructions qu’un processeur doit exécuter. Chaque famille de processeurs en a un.,Langage machine,,,,
Pourquoi il est important de connaitre le langage machine ?,Car c'est un des seuls moyens pour utiliser des opérations atomiques du processeur.,Langage machine,,,,
Définis langage machine,"Langage ayant le plus bas niveau possible, pas compréhensible par un humain.",Langage machine,,,,
Quel est le role de l'assembleur ?,Convertir le langage d'assemblage en langage machine.,Langage machine,,,,
Quels sont le nom des 4 étapes de compilation d'un fichier C ?,1. Prétraitement µ 2. Compilation µ 3. Assemblage µ 4. Editions de liens,Langage C,,,,
"Que fait l'étape ""Prétraitement"" du compilateur C ?",Compilateur lance le préprocesseur qui analyse le fichier source C et remplace les directives de prétraitement avec leur contenu respectif,Langage C,,,,
Donne un exemple de directive de prétraitement,#define µ #include,Langage C,,,,
"Que fait l'étape ""Compilation"" du compilateur C ?",Compilateur convertit le code source prétraité en code objet.,Langage C,,,,
Définis le code objet,Code machine en langage binaire qui contient les informations nécessaires pour créer une version exécutable d'un programme mais qui n'est pas exécutable en tant que tel.,Langage C,,,,
"Que fait l'étape ""Assemblage"" du compilateur C ?",Compilateur assemble le code objet en code machine lisible par une machine.,Langage C,,,,
"Que fait l'étape ""Editions de liens"" du compilateur C ?",Code assembleur est combiné avec les bibliothèque nécessaires pour créer un exécutable qui peut être exécuté.,Langage C,,,,
Qu'est ce que le Linker ?,Programme qui relie les différentes parties d'un programme compilé en un seul fichier exécutable. Relie les objets générés par le compilateur en un seul fichier exécutable.,Langage C,,,,
Dans laquelle des 4 étapes de compilation d'un code C est ce que le Linker intervient ?,"Dans l'étape ""Assemblage"", la troisième étape.",Langage C,,,,
Qu'est ce que le Loader?,Réalise la mise en place de l'espace mémoire du programme. µ S'occupe de charger les librairies dynamiques qui sont nécessaires à l'exécution du programme.,Langage C,,,,
Quand on dit que le Loader met en place l'espace mémoire du programme que veut-on dire ?,Réservation de segments et remplissage de ceux-ci a partir du fichier exécutable.,Langage C,,,,
Donne un exemple de librairie dynamique.,.dll µ .so,Langage C,,,,
Dans laquelle des 4 étapes de compilation d'un code C est ce que le Loader intervient ?,"Dans l'étape ""éditions de liens"", la quatrième étape.",Langage C,,,,
"Quelle est la base du type ""binaire"" et comment définissons-nous un int binaire en C ?",Base 2 µ µ int i = 0b1110010; µ (seulement certains compilateurs),Langage C,,,,
"Quelle est la base du type ""octal"" et comment définissons-nous un int octal en C ?",Base 8 µ int i = 0173;,Langage C,,,,
"Quelle est la base du type ""décimal"" et comment définissons-nous un int décimal en C ?",Base 10 µ int i = 123;,Langage C,,,,
"Quelle est la base du type ""héxadécimal"" et comment définissons-nous un int héxadécimal en C ?",Base 16 µ int i = 0x7b;,Langage C,,,,
"Définis ""entier signé"" en C et donne sa notation en C.","Entier positif ou négatif, se note ""int"" en C.",Langage C,,,,
"Définis ""entier non-signé"" en C et donne sa notation en C.","Entier positif, se note ""unsigned int"" en C.",Langage C,,,,
Quelle est la représentation utilisée par C pour les entiers signés ?,La représentation en complément à 2.,Langage C,,,,
Quel est le processur pour transformer un nombre représenté en complément à 2 en son opposé ?,1. Inverser tous les bits µ 2. Ajouter 1,Langage C,,,,
"Comment note-t-on la manipulation de bits ""not"" ?",~a,Langage C,,,,
"Comment note-t-on la manipulation de bits ""and"" ?",a & b,Langage C,,,,
"Comment note-t-on la manipulation de bits ""or"" ?",a | b,Langage C,,,,
"Comment note-t-on la manipulation de bits ""xor"" ?",a ^ b,Langage C,,,,
Quelles sont les propriétés d'accessibilité d'une variable static déclarée en dehors d'un bloc ?,Accessible à toutes les fonctions du module µ Pas accessible aux autres modules.,Langage C,,,,
Quelles est la propritété d'une variable static déclarée dans un bloc ?,Garde sa valeur d'une invocation de la fonction à l'autre,Langage C,,,,
Ou est-ce que une variable static déclarée dans un bloc elle-t-elle initialisée ?,Dans le segment de données initialisés,Langage C,,,,
Quels sont les 6 zones de l'organisation d'une programme Linux.,1. Segment Texte µ 2. Segment de données initialisées µ 3. Segment de données non-initialisées µ 4. Heap µ 5. Arguments & Variables d'environnement µ 6. Stack,Organisation de la mémoire en C,,,,
"Définis la zone ""Segment texte"".",Partie basse de la mémoire. µ Contient les instructions à exécuter par le processseur. µ Seulement READ. µ Si un programme essaye de modifier il est interrompu. µ Stocke les instructions qui sont exécutées par le microprocesseur. ,Organisation de la mémoire en C,,,,
"Définis la zone ""Segment des données initialisées"".",Ensemble des données et chaînes de caractères utilisées par le programme. µ Contient variables globales µ Contient constantes.,Organisation de la mémoire en C,,,,
"Définis la zone ""Segment des données non-initialisées"".",Réservée pour les variables non-initialisées.,Organisation de la mémoire en C,,,,
"Définis la zone ""Heap"".",Permet de stocker des données et d'y associer un pointeur. µ Un processus peut modifier la taille de son heap. µ Malloc/free alloue/libère de la mémoire ce cette zone.,Organisation de la mémoire en C,,,,
Avec quels 2 appels un processus peut-il modifier la taille de son Heap ?,1. brk µ 2. sbkr,Organisation de la mémoire en C,,,,
"Définis la zone ""Arguments & Variables d'envionnements"".",Partie haute de la mémoire µ Arguments en ligne de commande µ Variables environnement,Organisation de la mémoire en C,,,,
Que stocke la variable d'environnement HOSTNAME ?,Nom de la machine sur lequel le programme s'éxécute.,Organisation de la mémoire en C,,,,
Que stocke la variable d'environnement SHELL ?,Interpréteur de commande utilisé par défaut pour l'utilisateur courant,Organisation de la mémoire en C,,,,
Que stocke la variable d'environnement USER ?,Nom de l'utilisateur courant,Organisation de la mémoire en C,,,,
Que stocke la variable d'environnement HOME ?,Répertoire d'accueil de l'utilisateur courant,Organisation de la mémoire en C,,,,
Que stocke la variable d'environnement PRINTER ?,Nom de l'imprimante par défaut qui est utilisée par la commande lp,Organisation de la mémoire en C,,,,
Que stocke la variable d'environnement PATH ?,Liste ordonnée des répertoires que le système parcourt pour trouver un programme à exécuter.,Organisation de la mémoire en C,,,,
"Définis la zone ""Stack"".","Contient les variables locales et les valeurs de retours des fonctions appelées µ Gérée comme une pile µ Lorsqu'une fonction est applée, nouveau bloc de mémoire alloué pour stocker les informations de contexte de cette fonction sur la pile, ce bloc est libéré quand la fonction retourne µ Taille définie par l'OS µ Stack Overflow = fonction appelle trop de fonctions qui ne retournent (cause de segfault)",Organisation de la mémoire en C,,,,
A quoi servent les algorithmes de gestion de mémoire dynamique ?,Retourne des zones de mémoire libres qui ne se chevauchent pas. µ Recycle la mémoire des zones libérées pour pouvoir y stocker de nouvelles zones réservées.,Gestion de la mémoire dynamique ,,,, 
Quels sont les 4 contraites d'un algorithme de gestion de mémoire dynamique ?,1. Conserver les métadonnées sur les blocs alloués et libérés µ 2. Heap utilisé pour stocker métadonnées 3. Métadonnées intercalées avec les zones de mémoire allouées par l'application µ 4. Zones de mémoire allignées (= padding),Gestion de la mémoire dynamique ,,,,
Quels sont les 3 critères utilisés pour mesurer la qualité d'un algorithme de gestion de mémoire dynamique ?,1. Vitesse d'exécution µ 2. Utilisation de la mémoire µ 3. Localité,Gestion de la mémoire dynamique ,,,,
"Qu'évalue le critère ""Vitesse d'exécution"" ? ",Rapidité & Stabilité,Gestion de la mémoire dynamique ,,,,
"Définis ""fragmentation externe"".",Mesure a quel point l'espace mémoire complet est fragmenté avec de nombreuses zones libres intercalées entre des zones réservées.,Gestion de la mémoire dynamique ,,,,
"Définis ""fragmentation interne"".",Mesure l'espace perdu pour chaque allocation (= padding + espace pour métadonnées).,Gestion de la mémoire dynamique ,,,,
Pourquoi la défragmentation n'est pas une option pour un algorithme de gestion de mémoire dynamique ?,Car les pointeurs vers les zones allouées ont déja été retournés via malloc. Donc plus possible de les changer.,Gestion de la mémoire dynamique ,,,,
"Qu'évalue le critère ""Utilisation de la mémoire"" ? ",A quel point la fragmentation est faible,Gestion de la mémoire dynamique ,,,,
"Définis ""localité temporelle"".",Une même donnée est lue plusieurs fois dans un intervalle de temps court.,Gestion de la mémoire dynamique ,,,,
"Définis ""localité spatiale"".",Si une donnée est lue alors il y a une forte probabilité que la donnée présente dans les octets suivants le soit aussi.,Gestion de la mémoire dynamique ,,,,
"Qu'évalue le critère ""Localité"" ? ",Espaces mémoires réservés par des appels à malloc successifs doivents être le plus proche possible les uns des autres.,Gestion de la mémoire dynamique ,,,,
Que stocke le bloc de métadonnées ?,1. Taille du bloc µ 2. Si le bloc est libre ou pas (drapeau 0/1),Gestion de la mémoire dynamique ,,,,
"En pratique, quel astuce utilisons-nous pour stocker le drapeau des métadonnées et pourquoi est-ce que cela fonctionne ?","Puisqu’on alloue toujours des blocs dont la taille est un multiple de 2, le dernier bit d’une adresse est toujours 0. µ On peut donc utiliser ce bit pour stocker le drapeau.",Gestion de la mémoire dynamique ,,,,
Quelles sont les 3 politiques de placement vues pour les algorithmes de gestion de mémoire dynamique ?,1. First Fit µ 2. Next Fit µ 3. Best Fit,Différentes politiques de placement,,,,
"Comment fonctionne la politique de placement ""First Fit"" ?",Choisir le premier bloc satisfaisant rencontré,Différentes politiques de placement,,,,
"Comment fonctionne la politique de placement ""Next Fit"" ?",Choisir le premier bloc satisfaisant rencontré à partir du dernier bloc alloué,Différentes politiques de placement,,,,
"Comment fonctionne la politique de placement ""Best Fit"" ?",Parcours intégral de la liste pour trouver le bloc qui correspond au mieux à la taille demandée,Différentes politiques de placement,,,,
"Discute de la politique de placement ""First Fit"" en fonction des 3 critères d'un algorithme de gestion de mémoire dynamique.",1. Rapide µ 2. Fragmentation élevée µ 3. Localité faible (pire en pire),Différentes politiques de placement,,,,
"Discute de la politique de placement ""Next Fit"" en fonction des 3 critères d'un algorithme de gestion de mémoire dynamique.","1. Rapide µ 2. Fragmentation très élevée µ 3. Meilleure localité que ""First Fit""",Différentes politiques de placement,,,,
"Discute de la politique de placement ""Best Fit"" en fonction des 3 critères d'un algorithme de gestion de mémoire dynamique.",1. Lent (parcours total) µ 2. Fragmentation optimale µ 3. Localité catastrophique,Différentes politiques de placement,,,,